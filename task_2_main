from pymongo import MongoClient
from pymongo.server_api import ServerApi


#функція виведення одного

def read_one(name):
    client = MongoClient(
    "mongodb+srv://pisoss2000:Takmanbek01@cluster0.yy1kyzg.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0",
    server_api=ServerApi('1')
    )
    db = client.book

    result = db.cats.find_one({"name":name})
    print(result)
    return None

#функція виведення всіх

def read_all():
    client = MongoClient(
    "mongodb+srv://pisoss2000:Takmanbek01@cluster0.yy1kyzg.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0",
    server_api=ServerApi('1')
    )
    db = client.book

    result = db.cats.find({})
    for el in result:
        print(el)
    return None

#read_all()
#read_one('barsik')
        
# функція, яка дозволяє користувачеві оновити вік кота за ім'ям.
def update_age(name, age): 
    client = MongoClient(
    "mongodb+srv://pisoss2000:Takmanbek01@cluster0.yy1kyzg.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0",
    server_api=ServerApi('1')
    )
    db = client.book

    db.cats.update_one({"name": name}, {"$set": {"age": age}})
    result = db.cats.find_one({"name": name})
    print(result)
    return None

#update_age('barsik', 4)

#функція, яка дозволяє додати нову характеристику до списку features кота за ім'ям.

def add_feature_to_cat(name, new_feature):
    # Знайдемо кота за ім'ям
    client = MongoClient(
    "mongodb+srv://pisoss2000:Takmanbek01@cluster0.yy1kyzg.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0",
    server_api=ServerApi('1')
    )
    db = client.book
    cat = db.cats.find_one({"name": name})
    if cat:
        # Оновимо список features кота, додавши нову характеристику
        updated_features = cat.get("features", [])  # отримаємо поточний список features або пустий список, якщо він не існує
        updated_features.append(new_feature)  # додамо нову характеристику до списку features

        # Оновимо документ у базі даних
        update_result = db.cats.update_one({'name': name}, {"$set": {"features": updated_features}})
        if update_result.modified_count > 0:
            print(f"Додано нову характеристику '{new_feature}' до кота з ім'ям '{name}'")
        else:
            print(f"Не вдалося додати нову характеристику до кота з ім'ям '{name}'")
    else:
        print(f"Кіт з ім'ям '{name}' не знайдено в базі даних")

#add_feature_to_cat("barsik", "любить спати на сонці")
        
#функція для видалення запису з колекції за ім'ям тварини.        
def delete_one(name):
    client = MongoClient(
    "mongodb+srv://pisoss2000:Takmanbek01@cluster0.yy1kyzg.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0",
    server_api=ServerApi('1')
    )
    db = client.book

    db.cats.delete_one({"name": name})
    result = db.cats.find_one({"name": name})
    #print(result)   

#delete_one('barsik')     
    
def delete_all():
    client = MongoClient(
    "mongodb+srv://pisoss2000:Takmanbek01@cluster0.yy1kyzg.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0",
    server_api=ServerApi('1')
    )
    db = client.book

    db.cats.delete_many({})